{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAqC;AAC9B;AACP;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAQ;AAChB,KAAK;AACL;AACA;AACA,QAAQ,iDAAQ;AAChB,KAAK;AACL;;;;;;;;;;;;;;;;AClC2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAE;AACd,gCAAgC;AAChC;AACA;AACA;AACA,IAAI,mDAAE;AACN;;;;;;;;;;;;;;;;;ACjE2C;AACN;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,QAAQ,iBAAiB;AACxF,iEAAiE,QAAQ,kBAAkB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY,EAAE,6BAA6B;AACvE;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAE;AACd;AACA;AACA,2BAA2B,QAAQ,uBAAuB;AAC1D,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,QAAQ,iBAAiB;AACxF,iEAAiE,QAAQ,kBAAkB;AAC3F;AACA;AACA;AACA,uCAAuC,cAAc,EAAE,OAAO;AAC9D;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2CAA2C;AACxD;AACA;AACA,wBAAwB,OAAO,+BAA+B;AAC9D;AACA,kBAAkB,gCAAgC;AAClD,iCAAiC,6DAA6D;AAC9F;AACA,iBAAiB;AACjB,YAAY,uCAAuC,EAAE;AACrD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,MAAM,QAAQ;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY;AAChE,mDAAmD,YAAY;AAC/D;AACA,wGAAwG,YAAY;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,sCAAsC;AACtC;AACA,yDAAyD;AACzD;AACA;AACA,+BAA+B;AAC/B,gCAAgC,8BAA8B,gBAAgB;AAC9E;AACA,8FAA8F,sBAAsB;AACpH;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA,qDAAqD,kBAAkB,wBAAwB,gBAAgB;AAC/G,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA,oEAAoE,wBAAwB,kBAAkB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAE,QAAQ,0CAA0C,QAAQ,iBAAiB;AACrF;AACA,QAAQ,iDAAQ;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,mDAAE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAE,QAAQ,8CAA8C;AACpE,YAAY,mDAAE,QAAQ,gDAAgD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAE;AAClB;AACA;AACA,+BAA+B,8BAA8B;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAE;AAClB;AACA;AACA,+BAA+B,QAAQ,uBAAuB;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,mDAAE;AACd;AACA;AACA,2BAA2B,QAAQ,uBAAuB;AAC1D,aAAa;AACb;AACA,KAAK;AACL,IAAI,mDAAE,QAAQ,8CAA8C;AAC5D,IAAI,mDAAE,QAAQ,gDAAgD;AAC9D;AACO;AACP;AACA;AACA,QAAQ,iDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7TgD;AACA;AACF;AAC9C;AACO;AACP;AACA;AACO;AACP,wBAAwB;AACxB;AACA;AACO;AACP;AACA,QAAQ,6DAAe;AACvB;AACA;AACA,QAAQ,6DAAe;AACvB;AACA;AACA,QAAQ,2DAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;AC3BM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;UC9CP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNiD;AACD;AACF;AACE;AAChD;AACA,iDAAQ,MAAM,yDAAe;AAC7B,iDAAQ,WAAW,yDAAe;AAClC,iDAAQ,UAAU,uDAAc;AAChC,iDAAQ,WAAW,yDAAe;AAClC;AACA,IAAI,oDAAW;AACf,CAAC","sources":["webpack://fun-chat-client/./src/pages/about.ts","webpack://fun-chat-client/./src/pages/login.ts","webpack://fun-chat-client/./src/pages/main.ts","webpack://fun-chat-client/./src/router.ts","webpack://fun-chat-client/./src/services/websocket.ts","webpack://fun-chat-client/webpack/bootstrap","webpack://fun-chat-client/webpack/runtime/define property getters","webpack://fun-chat-client/webpack/runtime/hasOwnProperty shorthand","webpack://fun-chat-client/webpack/runtime/make namespace object","webpack://fun-chat-client/./src/index.ts"],"sourcesContent":["import { navigate } from '../router';\nexport function renderAboutPage() {\n    var _a, _b;\n    document.body.innerHTML = `\n    <header>\n      <h2>About Fun Chat</h2>\n      <nav style=\"margin-bottom: 1rem;\">\n        <a href=\"/login\" id=\"nav-login\">Login</a> |\n        <a href=\"/main\" id=\"nav-main\">Main</a>\n      </nav>\n    </header>\n    <main style=\"padding: 1rem;\">\n      <p><strong>Fun Chat</strong> is a real-time messaging application built using TypeScript, WebSockets, and SPA routing.</p>\n      <p>Created by <strong>Yuliya Kim</strong> as part of a frontend engineering project.</p>\n      <p>The app includes features like:</p>\n      <ul>\n        <li>User authentication</li>\n        <li>Live message exchange</li>\n        <li>Message editing, deletion, and delivery status</li>\n        <li>Responsive UI and routing</li>\n      </ul>\n    </main>\n    <footer style=\"margin-top: 2rem;\">\n      <p>Â© 2025 Fun Chat by Yuliya Kim | <a href=\"https://github.com/yuliyakim01\" target=\"_blank\">GitHub</a></p>\n    </footer>\n  `;\n    (_a = document.getElementById('nav-login')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', (e) => {\n        e.preventDefault();\n        navigate('/login');\n    });\n    (_b = document.getElementById('nav-main')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', (e) => {\n        e.preventDefault();\n        navigate('/main');\n    });\n}\n","import { ws } from '../services/websocket';\nexport function renderLoginPage() {\n    const app = document.body;\n    app.innerHTML = '';\n    const container = document.createElement('div');\n    container.innerHTML = `\n    <h1>Login to Fun Chat</h1>\n    <form id=\"login-form\">\n      <label>\n        Username:\n        <input type=\"text\" id=\"username\" required autocomplete=\"username\" />\n      </label><br/>\n      <label>\n        Password:\n        <input type=\"password\" id=\"password\" required autocomplete=\"current-password\" />\n      </label><br/>\n      <button type=\"submit\">Login</button>\n    </form>\n    <p id=\"error\" style=\"color: red;\"></p>\n  `;\n    app.appendChild(container);\n    const form = document.getElementById('login-form');\n    const errorDisplay = document.getElementById('error');\n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n        const username = document.getElementById('username').value.trim();\n        const password = document.getElementById('password').value.trim();\n        if (username.length < 3) {\n            errorDisplay.textContent = 'Username must be at least 3 characters.';\n            return;\n        }\n        if (password.length < 6) {\n            errorDisplay.textContent = 'Password must be at least 6 characters.';\n            return;\n        }\n        errorDisplay.textContent = '';\n        const loginMessage = {\n            id: null,\n            type: 'USER_LOGIN',\n            payload: {\n                user: {\n                    login: username,\n                    password: password,\n                }\n            }\n        };\n        console.log('[LOGIN MESSAGE]', loginMessage);\n        ws.send(loginMessage);\n    });\n    const handler = (data) => {\n        var _a, _b, _c;\n        if (data.type === 'ERROR') {\n            const error = ((_a = data.payload) === null || _a === void 0 ? void 0 : _a.error) || 'Login failed.';\n            console.warn('[LOGIN ERROR]', error);\n            errorDisplay.textContent = error;\n        }\n        if (data.type === 'USER_LOGIN' && ((_c = (_b = data.payload) === null || _b === void 0 ? void 0 : _b.user) === null || _c === void 0 ? void 0 : _c.login)) {\n            const username = data.payload.user.login;\n            localStorage.setItem('user', username);\n            ws.removeOnMessage(handler);\n            history.pushState({}, '', '/main');\n            window.dispatchEvent(new PopStateEvent('popstate'));\n        }\n    };\n    ws.onMessage(handler);\n}\n","import { ws } from '../services/websocket';\nimport { navigate } from '../router';\nlet selectedUser = null;\nlet activeUsers = [];\nlet inactiveUsers = [];\nconst readTimestamps = {};\nfunction renderUserList(searchTerm = '') {\n    const listEl = document.getElementById('user-list');\n    if (!listEl)\n        return;\n    listEl.innerHTML = '';\n    const currentUser = localStorage.getItem('user');\n    const combinedUsers = [\n        ...activeUsers.map(u => (Object.assign(Object.assign({}, u), { isLogined: true }))),\n        ...inactiveUsers.map(u => (Object.assign(Object.assign({}, u), { isLogined: false }))),\n    ];\n    const filtered = combinedUsers\n        .filter(u => u.login !== currentUser)\n        .filter(u => u.login.toLowerCase().includes(searchTerm.toLowerCase()));\n    filtered.forEach((user) => {\n        const li = document.createElement('li');\n        li.textContent = `${user.login} ${user.isLogined ? 'ðŸŸ¢' : 'ðŸ”´'}`;\n        li.dataset.username = user.login;\n        li.style.cursor = 'pointer';\n        li.addEventListener('click', () => {\n            selectedUser = user.login;\n            updateChatTitle();\n            ws.send({\n                id: null,\n                type: 'MSG_FROM_USER',\n                payload: { user: { login: selectedUser } },\n            });\n        });\n        listEl.appendChild(li);\n    });\n}\nfunction updateChatTitle() {\n    const titleEl = document.getElementById('chat-title');\n    if (!titleEl || !selectedUser)\n        return;\n    const allUsers = [\n        ...activeUsers.map(u => (Object.assign(Object.assign({}, u), { isLogined: true }))),\n        ...inactiveUsers.map(u => (Object.assign(Object.assign({}, u), { isLogined: false }))),\n    ];\n    const selected = allUsers.find(u => u.login === selectedUser);\n    const status = (selected === null || selected === void 0 ? void 0 : selected.isLogined) ? 'ðŸŸ¢' : 'ðŸ”´';\n    titleEl.textContent = `Chat with ${selectedUser} ${status}`;\n}\nfunction handleEditMessage(messageId) {\n    var _a;\n    const msgDiv = document.querySelector(`[data-msg-id=\"${messageId}\"]`);\n    if (!msgDiv)\n        return;\n    const msgTextEl = msgDiv.querySelector('.msg-text');\n    const originalText = msgTextEl.textContent || '';\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.value = originalText;\n    input.style.width = '80%';\n    const saveBtn = document.createElement('button');\n    saveBtn.textContent = 'ðŸ’¾ Save';\n    saveBtn.addEventListener('click', () => {\n        const newText = input.value.trim();\n        if (newText && newText !== originalText) {\n            ws.send({\n                id: crypto.randomUUID(),\n                type: 'MSG_EDIT',\n                payload: {\n                    message: {\n                        id: messageId,\n                        text: newText,\n                    },\n                },\n            });\n        }\n    });\n    msgTextEl.replaceWith(input);\n    (_a = msgDiv.querySelector('.edit-btn')) === null || _a === void 0 ? void 0 : _a.replaceWith(saveBtn);\n}\nfunction handleDeleteMessage(messageId) {\n    const msgDiv = document.querySelector(`[data-msg-id=\"${messageId}\"]`);\n    if (!msgDiv) {\n        console.warn('[Delete] No message div found for ID:', messageId);\n        return;\n    }\n    if (msgDiv.querySelector('.confirm-delete-btn')) {\n        console.log('[Delete] Confirmation already shown.');\n        return;\n    }\n    const confirmBtn = document.createElement('button');\n    confirmBtn.textContent = 'Confirm Delete';\n    confirmBtn.className = 'confirm-delete-btn';\n    confirmBtn.style.marginLeft = '0.5rem';\n    confirmBtn.addEventListener('click', () => {\n        console.log('[Delete] Sending MSG_DELETE for ID:', messageId);\n        ws.send({\n            id: crypto.randomUUID(),\n            type: 'MSG_DELETE',\n            payload: {\n                message: { id: messageId },\n            },\n        });\n        confirmBtn.remove();\n    });\n    msgDiv.appendChild(confirmBtn);\n}\nfunction generateMessageHTML(msg, currentUser, lastRead, dividerInserted) {\n    const isOwnMessage = msg.from === currentUser;\n    const isUnread = msg.datetime > lastRead && msg.from !== currentUser;\n    const statusText = isOwnMessage\n        ? `${msg.status.isReaded ? 'Read' : 'Delivered'}`\n        : '';\n    const msgHtml = `\n    <div data-msg-id=\"${msg.id}\" style=\"margin-bottom: 0.5rem;\">\n      <p>\n        <strong>${isOwnMessage ? 'You' : msg.from}:</strong>\n        <span class=\"msg-text\">${msg.status.isDeleted ? '<i>(message deleted)</i>' : msg.text}</span>\n        <br />\n        <small>${new Date(msg.datetime).toLocaleTimeString()} \n          ${msg.status.isEdited ? '(edited)' : ''} ${statusText}\n        </small>\n      </p>\n      ${isOwnMessage && !msg.status.isDeleted ? `\n        <button class=\"edit-btn\"> Edit</button>\n        <button class=\"delete-btn\"> Delete</button>\n      ` : ''}\n    </div>\n  `;\n    return {\n        html: isUnread && !dividerInserted ? `<hr id=\"unread-divider\" style=\"border: 1px solid #aaa;\" />${msgHtml}` : msgHtml,\n        insertDivider: isUnread && !dividerInserted,\n    };\n}\nfunction attachMessageActionListeners() {\n    document.querySelectorAll('.edit-btn').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const msgDiv = e.target.closest('[data-msg-id]');\n            if (msgDiv)\n                handleEditMessage(msgDiv.getAttribute('data-msg-id'));\n        });\n    });\n    document.querySelectorAll('.delete-btn').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            const msgDiv = e.target.closest('[data-msg-id]');\n            if (msgDiv)\n                handleDeleteMessage(msgDiv.getAttribute('data-msg-id'));\n        });\n    });\n}\nfunction setupUnreadDividerHandler() {\n    const divider = document.getElementById('unread-divider');\n    if (!divider)\n        return;\n    const clearDivider = () => {\n        divider.remove();\n        if (selectedUser)\n            readTimestamps[selectedUser] = Date.now();\n    };\n    const chat = document.getElementById('chat-history');\n    chat.addEventListener('scroll', clearDivider, { once: true });\n    chat.addEventListener('click', clearDivider, { once: true });\n    const sendBtn = document.getElementById('send-btn');\n    sendBtn === null || sendBtn === void 0 ? void 0 : sendBtn.addEventListener('click', clearDivider, { once: true });\n}\nfunction renderChatHistory(messages) {\n    const historyEl = document.getElementById('chat-history');\n    if (!historyEl || !selectedUser)\n        return;\n    const currentUser = localStorage.getItem('user');\n    const lastRead = readTimestamps[selectedUser] || 0;\n    let dividerInserted = false;\n    const chatMessages = messages.length === 0\n        ? '<p>This is the beginning of the dialogue.</p>'\n        : messages.map(msg => {\n            const { html, insertDivider } = generateMessageHTML(msg, currentUser, lastRead, dividerInserted);\n            if (insertDivider)\n                dividerInserted = true;\n            return html;\n        }).join('');\n    historyEl.innerHTML = chatMessages;\n    setTimeout(() => historyEl.scrollTop = historyEl.scrollHeight, 0);\n    attachMessageActionListeners();\n    setupUnreadDividerHandler();\n}\nfunction renderLayout(user) {\n    document.body.innerHTML = `\n    <header>\n      <h2>Fun Chat</h2>\n      <p id=\"current-user\">Logged in as: <strong>${user}</strong></p>\n      <nav style=\"margin-bottom: 1rem;\">\n        <a href=\"/about\">About</a>\n        <button id=\"logout-btn\" style=\"margin-left: 1rem;\">Logout</button>\n      </nav>\n    </header>\n    <main style=\"display: flex;\">\n      <aside style=\"width: 30%; border-right: 1px solid #ccc; padding: 0.5rem;\">\n        <h3>Users</h3>\n        <input type=\"text\" id=\"user-search\" placeholder=\"Search users...\" style=\"width: 100%; margin-bottom: 0.5rem;\" />\n        <ul id=\"user-list\"></ul>\n      </aside>\n      <section style=\"width: 70%; padding: 0.5rem;\">\n        <h3 id=\"chat-title\">Chat</h3>\n        <div id=\"chat-history\" style=\"height: 300px; overflow-y: auto; border: 1px solid #ccc; padding: 0.5rem;\"></div>\n        <textarea id=\"message-input\" rows=\"2\" style=\"width: 100%; margin-top: 0.5rem;\"></textarea>\n        <button id=\"send-btn\">Send</button>\n      </section>\n    </main>\n    <p>\n      <img src=\"/images/images.png\" alt=\"Logo\" style=\"height: 20px; vertical-align: middle; margin-right: 8px;\" />\n      RS School Â© 2025 Fun Chat by <a href=\"https://github.com/yuliyakim01\" target=\"_blank\" rel=\"noopener noreferrer\">Yuliya Kim</a>\n    </p>\n  `;\n}\nfunction attachEventListeners(user) {\n    var _a;\n    (_a = document.getElementById('logout-btn')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', () => {\n        ws.send({ id: null, type: 'USER_LOGOUT', payload: { user: { login: user } } });\n        localStorage.removeItem('user');\n        navigate('/login');\n    });\n    const sendBtn = document.getElementById('send-btn');\n    const messageInput = document.getElementById('message-input');\n    messageInput.addEventListener('keydown', (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            sendBtn.click();\n        }\n    });\n    sendBtn.addEventListener('click', () => {\n        const text = messageInput.value.trim();\n        if (!text || !selectedUser)\n            return;\n        ws.send({\n            id: crypto.randomUUID(),\n            type: 'MSG_SEND',\n            payload: {\n                message: {\n                    to: selectedUser,\n                    text,\n                },\n            },\n        });\n        messageInput.value = '';\n    });\n    const searchInput = document.getElementById('user-search');\n    searchInput === null || searchInput === void 0 ? void 0 : searchInput.addEventListener('input', () => {\n        renderUserList(searchInput.value);\n    });\n}\nfunction initializeWebSocketHandlers(user) {\n    ws.onMessage((data) => {\n        var _a, _b, _c, _d, _e, _f;\n        if (data.type === 'USER_ACTIVE' && ((_a = data.payload) === null || _a === void 0 ? void 0 : _a.users)) {\n            activeUsers = data.payload.users;\n            renderUserList(((_b = document.getElementById('user-search')) === null || _b === void 0 ? void 0 : _b.value) || '');\n        }\n        if (data.type === 'USER_INACTIVE' && ((_c = data.payload) === null || _c === void 0 ? void 0 : _c.users)) {\n            inactiveUsers = data.payload.users;\n            renderUserList(((_d = document.getElementById('user-search')) === null || _d === void 0 ? void 0 : _d.value) || '');\n        }\n        if (data.type === 'USER_EXTERNAL_LOGIN' || data.type === 'USER_EXTERNAL_LOGOUT') {\n            ws.send({ id: null, type: 'USER_ACTIVE', payload: null });\n            ws.send({ id: null, type: 'USER_INACTIVE', payload: null });\n        }\n        if (data.type === 'MSG_FROM_USER' &&\n            ((_e = data.payload) === null || _e === void 0 ? void 0 : _e.messages) &&\n            selectedUser &&\n            data.payload.messages.some((m) => (m.from === selectedUser && m.to === user) ||\n                (m.from === user && m.to === selectedUser))) {\n            updateChatTitle();\n            const unreadMessageIds = data.payload.messages\n                .filter((m) => m.from === selectedUser && !m.status.isReaded)\n                .map((m) => m.id);\n            if (unreadMessageIds.length > 0) {\n                readTimestamps[selectedUser] = Date.now();\n                ws.send({\n                    id: crypto.randomUUID(),\n                    type: 'MSG_READ',\n                    payload: { messageIds: unreadMessageIds },\n                });\n            }\n            renderChatHistory(data.payload.messages);\n        }\n        if (data.type === 'MSG_SEND') {\n            const msg = (_f = data.payload) === null || _f === void 0 ? void 0 : _f.message;\n            if (!msg)\n                return;\n            const isRelated = (msg.from === selectedUser && msg.to === user) ||\n                (msg.from === user && msg.to === selectedUser);\n            if (isRelated && selectedUser) {\n                ws.send({\n                    id: null,\n                    type: 'MSG_FROM_USER',\n                    payload: { user: { login: selectedUser } },\n                });\n            }\n        }\n        if (['MSG_EDIT', 'MSG_DELETE'].includes(data.type) && selectedUser) {\n            ws.send({\n                id: null,\n                type: 'MSG_FROM_USER',\n                payload: { user: { login: selectedUser } },\n            });\n        }\n    });\n    ws.send({ id: null, type: 'USER_ACTIVE', payload: null });\n    ws.send({ id: null, type: 'USER_INACTIVE', payload: null });\n}\nexport function renderMainPage() {\n    const user = localStorage.getItem('user');\n    if (!user) {\n        navigate('/login');\n        return;\n    }\n    renderLayout(user);\n    attachEventListeners(user);\n    initializeWebSocketHandlers(user);\n}\n","import { renderLoginPage } from './pages/login';\nimport { renderAboutPage } from './pages/about';\nimport { renderMainPage } from './pages/main';\nconst routes = {};\nexport function addRoute(path, handler) {\n    routes[path] = handler;\n}\nexport function navigate(path) {\n    history.pushState({}, '', path);\n    renderRoute(path);\n}\nexport function renderRoute(path) {\n    if (path === '/login') {\n        renderLoginPage();\n    }\n    else if (path === '/about') {\n        renderAboutPage();\n    }\n    else {\n        renderMainPage();\n    }\n}\nfunction renderNotFound() {\n    document.body.innerHTML = '<h1>404 - Page Not Found</h1>';\n}\nwindow.addEventListener('popstate', () => {\n    renderRoute(location.pathname);\n});\n","export class WebSocketService {\n    constructor(url) {\n        this.url = url;\n        this.messageHandlers = [];\n        this.messageQueue = [];\n        this.isConnected = false;\n        this.socket = new WebSocket(url);\n        this.initializeEvents();\n    }\n    initializeEvents() {\n        this.socket.addEventListener('open', () => {\n            console.log('[WS] Connected to server');\n            this.isConnected = true;\n            // Flush any queued messages\n            this.messageQueue.forEach((msg) => this.send(msg));\n            this.messageQueue = [];\n        });\n        this.socket.addEventListener('message', (event) => {\n            const data = JSON.parse(event.data);\n            console.log('[WS] Received:', data);\n            this.messageHandlers.forEach((handler) => handler(data));\n        });\n        this.socket.addEventListener('close', () => {\n            console.warn('[WS] Connection closed');\n            this.isConnected = false;\n        });\n        this.socket.addEventListener('error', (error) => {\n            console.error('[WS] Error:', error);\n        });\n    }\n    send(data) {\n        if (this.isConnected && this.socket.readyState === WebSocket.OPEN) {\n            this.socket.send(JSON.stringify(data));\n        }\n        else {\n            console.warn('[WS] Not connected yet, queueing message:', data);\n            this.messageQueue.push(data);\n        }\n    }\n    onMessage(handler) {\n        this.messageHandlers.push(handler);\n    }\n    removeOnMessage(handler) {\n        this.messageHandlers = this.messageHandlers.filter(h => h !== handler);\n    }\n}\nexport const ws = new WebSocketService('ws://localhost:4000');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addRoute, renderRoute } from './router';\nimport { renderLoginPage } from './pages/login';\nimport { renderMainPage } from './pages/main';\nimport { renderAboutPage } from './pages/about';\n// Define routes\naddRoute('/', renderLoginPage);\naddRoute('/login', renderLoginPage);\naddRoute('/main', renderMainPage);\naddRoute('/about', renderAboutPage);\ndocument.addEventListener('DOMContentLoaded', () => {\n    renderRoute(location.pathname);\n});\n"],"names":[],"sourceRoot":""}